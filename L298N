#include <Servo.h>

// Pin Definitions
#define servoPin 12//also change
#define motorEnablePin 4//change to appropriate pin
#define motorInput1Pin 5//change
#define motorInput2Pin 14// change

/*
The servo pin should be connected directly to the ESP32 board, not to the motor driver. The servo motor is typically controlled using a PWM (Pulse Width Modulation) signal, which can be generated by the ESP32's GPIO pins.

In the code snippet provided, the servo pin is defined as servoPin, and it is connected to GPIO pin 12 on the ESP32 board. Make sure to connect the servo signal wire to GPIO pin 12 on the ESP32.

The motor driver is responsible for controlling the DC motor. In the code, the motor control pins (motorEnablePin, motorInput1Pin, and motorInput2Pin) are connected to the appropriate pins on the motor driver (such as the L298N), not directly to the ESP32 board.

To summarize:

Connect the servo pin to GPIO pin 12 on the ESP32 board.
Connect the motor control pins (motorEnablePin, motorInput1Pin, motorInput2Pin) to the appropriate pins on the motor driver (e.g., L298N).
Remember to make the necessary connections and adjust the pin assignments according to your specific setup.

*/

// Create servo object
Servo servoMotor;

// Set the motor speed
const int motorSpeed = 200;  // Adjust the value to set the desired speed (0-255)

void setup() {
  // Serial port initialization
  Serial.begin(115200);

  // Attach the servo motor to the pin
  servoMotor.attach(servoPin);

  // Set the motor control pins as outputs
  pinMode(motorEnablePin, OUTPUT);
  pinMode(motorInput1Pin, OUTPUT);
  pinMode(motorInput2Pin, OUTPUT);

  // Set motor enable pin to HIGH (to enable the motor)
  digitalWrite(motorEnablePin, HIGH);

  // Wait for the initialization
  delay(1000);
  Serial.println("Setup complete");
}

void loop() {
  // Control the servo motor
  servoMotor.write(90);  // Set the servo motor to the middle position (90 degrees)
  delay(1000);

  servoMotor.write(0);  // Set the servo motor to the leftmost position (0 degrees)
  delay(1000);

  servoMotor.write(180);  // Set the servo motor to the rightmost position (180 degrees)
  delay(1000);

  // Control the DC motor
  analogWrite(motorInput1Pin, motorSpeed);  // Set motor speed
  digitalWrite(motorInput2Pin, LOW);        // Set motor direction (forward)

  delay(2000);  // Run the motor for 2 seconds

  // Stop the motor
  digitalWrite(motorInput1Pin, LOW);
  digitalWrite(motorInput2Pin, LOW);

  delay(1000);  // Pause for 1 second
}
